<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hqhw.mapper.IntegralgradeMapper" >
  <resultMap id="BaseResultMap" type="com.hqhw.pojo.Integralgrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="one" property="one" jdbcType="INTEGER" />
    <result column="two" property="two" jdbcType="INTEGER" />
    <result column="three" property="three" jdbcType="INTEGER" />
    <result column="fore" property="fore" jdbcType="INTEGER" />
    <result column="five" property="five" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, one, two, three, fore, five
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hqhw.pojo.IntegralgradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from integralgrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from integralgrade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from integralgrade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hqhw.pojo.IntegralgradeExample" >
    delete from integralgrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hqhw.pojo.Integralgrade" >
    insert into integralgrade (id, one, two, 
      three, fore, five)
    values (#{id,jdbcType=INTEGER}, #{one,jdbcType=INTEGER}, #{two,jdbcType=INTEGER}, 
      #{three,jdbcType=INTEGER}, #{fore,jdbcType=INTEGER}, #{five,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hqhw.pojo.Integralgrade" >
    insert into integralgrade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="one != null" >
        one,
      </if>
      <if test="two != null" >
        two,
      </if>
      <if test="three != null" >
        three,
      </if>
      <if test="fore != null" >
        fore,
      </if>
      <if test="five != null" >
        five,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="one != null" >
        #{one,jdbcType=INTEGER},
      </if>
      <if test="two != null" >
        #{two,jdbcType=INTEGER},
      </if>
      <if test="three != null" >
        #{three,jdbcType=INTEGER},
      </if>
      <if test="fore != null" >
        #{fore,jdbcType=INTEGER},
      </if>
      <if test="five != null" >
        #{five,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hqhw.pojo.IntegralgradeExample" resultType="java.lang.Integer" >
    select count(*) from integralgrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update integralgrade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.one != null" >
        one = #{record.one,jdbcType=INTEGER},
      </if>
      <if test="record.two != null" >
        two = #{record.two,jdbcType=INTEGER},
      </if>
      <if test="record.three != null" >
        three = #{record.three,jdbcType=INTEGER},
      </if>
      <if test="record.fore != null" >
        fore = #{record.fore,jdbcType=INTEGER},
      </if>
      <if test="record.five != null" >
        five = #{record.five,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update integralgrade
    set id = #{record.id,jdbcType=INTEGER},
      one = #{record.one,jdbcType=INTEGER},
      two = #{record.two,jdbcType=INTEGER},
      three = #{record.three,jdbcType=INTEGER},
      fore = #{record.fore,jdbcType=INTEGER},
      five = #{record.five,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hqhw.pojo.Integralgrade" >
    update integralgrade
    <set >
      <if test="one != null" >
        one = #{one,jdbcType=INTEGER},
      </if>
      <if test="two != null" >
        two = #{two,jdbcType=INTEGER},
      </if>
      <if test="three != null" >
        three = #{three,jdbcType=INTEGER},
      </if>
      <if test="fore != null" >
        fore = #{fore,jdbcType=INTEGER},
      </if>
      <if test="five != null" >
        five = #{five,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hqhw.pojo.Integralgrade" >
    update integralgrade
    set one = #{one,jdbcType=INTEGER},
      two = #{two,jdbcType=INTEGER},
      three = #{three,jdbcType=INTEGER},
      fore = #{fore,jdbcType=INTEGER},
      five = #{five,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>